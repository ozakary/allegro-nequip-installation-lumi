Bootstrap: localimage
From: stage3.sif

%post

source /version.conf

LAMMPS_INSTALL_DIR=/opt/lammps

mkdir -p $LAMMPS_INSTALL_DIR

source /.init-module-build.sh

module load CrayEnv
module load PrgEnv-gnu craype-network-none buildtools
module load libfabric
module load pytorch

module rm cray-libsci

export PYTHONPATH="$LAMMPS_INSTALL_DIR/lib/python$PYTHON_VERSION/site-packages:$PYTHONPATH"
export PYTHONPATH="$LAMMPS_INSTALL_DIR/lib64/python$PYTHON_VERSION/site-packages:$PYTHONPATH"

CC=cc CXX=CC pip install --no-build-isolation --prefix $LAMMPS_INSTALL_DIR wheel==$WHEEL_VERSION
CC=cc CXX=CC pip install --no-build-isolation --prefix $LAMMPS_INSTALL_DIR matscipy==$MATSCIPY_VERSION
CC=cc CXX=CC pip install --no-build-isolation --prefix $LAMMPS_INSTALL_DIR vesin==$VESIN_VERSION

curl -LO https://github.com/mir-group/nequip/archive/$NEQUIP_COMMIT.tar.gz
tar xf $NEQUIP_COMMIT.tar.gz
NEQUIP_DIR=$(tar -tzf $NEQUIP_COMMIT.tar.gz | head -1 | cut -f1 -d"/")
cd $NEQUIP_DIR
#sed -i 's/"torch>=1.10.0,<1.13,!=1.9.0",/"torch>=1.13.0",/g' setup.py
CC=cc CXX=CC pip install --no-build-isolation --prefix $LAMMPS_INSTALL_DIR .
cd ../ && rm -rf $NEQUIP_COMMIT.tar.gz nequip-*

curl -LO https://github.com/mir-group/allegro/archive/$ALLEGRO_COMMIT.tar.gz
tar xf $ALLEGRO_COMMIT.tar.gz
ALLEGRO_DIR=$(tar -tzf $ALLEGRO_COMMIT.tar.gz | head -1 | cut -f1 -d"/")
cd $ALLEGRO_DIR
CC=cc CXX=CC pip install --no-build-isolation --prefix $LAMMPS_INSTALL_DIR .
cd ../ && rm -rf $ALLEGRO_COMMIT.tar.gz allegro-*

module load craype-network-ofi

curl -LO https://download.pytorch.org/libtorch/rocm6.0/libtorch-cxx11-abi-shared-with-deps-$LIBTORCH_VERSION.zip
unzip libtorch-cxx11-abi-shared-with-deps-*.zip

pushd libtorch/lib

for libwithhash in $(ls *-*.so*); do 
  for lib in *.so; do 
    patchelf --replace-needed $libwithhash $(s=$libwithhash; echo ${s%-*}.so${s#*.so*}) $lib
  done
done

pwd

#mv libmagma-*.so libmagma.so
#mv libgomp-*.so.1 libgomp.so.1

rm -rf *-*.so*

filetocopy=(libtorch.so libtorch_cpu.so libc10.so libc10_hip.so libtorch_hip.so
libmagma.so libgomp.so libcaffe2_nvrtc.so)

mkdir -p $LAMMPS_INSTALL_DIR/libtorch

for lib in ${filetocopy[@]}; do 
  cp $lib $LAMMPS_INSTALL_DIR/libtorch/$lib
done

popd

sed -i 's/hip::hipfft;//' /libtorch/share/cmake/Caffe2/Caffe2Targets.cmake

# Comment out the problematic regex line
sed -i '95s/^/#/' /libtorch/share/cmake/Caffe2/public/LoadHIP.cmake

# Remove hipblaslt from link interface
sed -i 's/roc::hipblaslt;//g' /libtorch/share/cmake/Caffe2/Caffe2Targets.cmake

git clone --branch=$LAMMPS_BRANCH --depth=1 $LAMMPS_REPO lammps-$LAMMPS_VERSION

curl -LO https://github.com/mir-group/pair_allegro/archive/$PAIR_ALLEGRO_COMMIT.tar.gz
tar xf $PAIR_ALLEGRO_COMMIT.tar.gz
PAIR_ALLEGRO_DIR=$(tar -tzf $PAIR_ALLEGRO_COMMIT.tar.gz | head -1 | cut -f1 -d"/")
cd $PAIR_ALLEGRO_DIR
./patch_lammps.sh ../lammps-$LAMMPS_VERSION/

cd ../lammps-$LAMMPS_VERSION

mkdir build && cd build

export HIPCC_COMPILE_FLAGS_APPEND="-std=c++17 -isystem ${CRAY_MPICH_PREFIX}/include "
export HIPCC_LINK_FLAGS_APPEND="-L${CRAY_MPICH_PREFIX}/lib -lmpi ${PE_MPICH_GTL_DIR_amd_gfx90a} ${PE_MPICH_GTL_LIBS_amd_gfx90a} "


export CMAKE_PREFIX_PATH=/libtorch/share/cmake:$ROCM_PATH/lib/cmake

cmake ../cmake \
  -D CMAKE_INSTALL_PREFIX=$LAMMPS_INSTALL_DIR \
  -D CMAKE_BUILD_TYPE=Release \
  -D CMAKE_CXX_COMPILER=hipcc \
  -D PKG_KOKKOS=ON \
  -D BUILD_MPI=ON \
  -D BUILD_OMP=ON \
  -D Kokkos_ARCH_ZEN3=ON \
  -D Kokkos_ARCH_VEGA90A=ON \
  -D Kokkos_ENABLE_SERIAL=ON \
  -D Kokkos_ENABLE_HIP=ON \
  -D Kokkos_ENABLE_OPENMP=ON \
  -D HIP_PATH=/opt/rocm \
  -D CMAKE_TUNE_FLAGS="-munsafe-fp-atomics" \
  -D CMAKE_INSTALL_RPATH='$ORIGIN/../libtorch' \
  -D PKG_ML-MACE=ON \
  -D MKL_INCLUDE_DIR=/opt/pytorch/include

grep -rl "std=c++14" . | xargs sed -i 's/-std=c++14//g'

make install -j16

cd / 

rm -rf libtorch lammps-$LAMMPS_VERSION
rm -rf pair_allegro-$PAIR_ALLEGRO_COMMIT $PAIR_ALLEGRO_COMMIT.tar.gz
rm -rf libtorch-cxx11-abi-shared-with-deps-*.zip target.lst

mkdir -p /opt/container_modules/lammps-pair-allegro/

cat >/opt/container_modules/lammps-pair-allegro/$LAMMPS_VERSION.lua <<EOF1
local root="$LAMMPS_INSTALL_DIR"

if not isloaded("pytorch") then
  load("pytorch")
end

prepend_path("PATH", pathJoin(root, "bin"))

prepend_path("LD_LIBRARY_PATH", pathJoin(root, "lib"))
prepend_path("LD_LIBRARY_PATH", pathJoin(root, "lib64"))

prepend_path("PYTHONPATH", pathJoin(root, "lib/python$PYTHON_VERSION/site-packages"))
prepend_path("PYTHONPATH", pathJoin(root, "lib64/python$PYTHON_VERSION/site-packages"))

EOF1
